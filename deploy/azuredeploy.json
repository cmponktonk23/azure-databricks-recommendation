{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "deployNs": {
            "type": "string"
        },
        "dbricksWorkspaceName": {
            "defaultValue": "[concat(parameters('deployNs'), 'dbricks', uniqueString(resourceGroup().id))]",
            "type": "string"
        },
        "dbricksLocation": {
            "defaultValue": "[resourceGroup().location]",
            "type": "string",
            "metadata": {
                "description": "Location of Databricks workspace"
            }
        },
        "dbricksTier": {
            "defaultValue": "premium",
            "type": "string",
            "allowedValues": [
                "premium",
                "standard"
            ]
        },
        "eventhubsNsName": {
            "defaultValue": "[concat(parameters('deployNs'), 'ehns', uniqueString(resourceGroup().id))]",
            "type": "string",
            "metadata": {
                "description": "Event Hubs namespace name"
            }
        },
        "eventhubsLocation": {
            "defaultValue": "[resourceGroup().location]",
            "type": "string",
            "metadata": {
                "description": "Event Hubs location"
            }
        },
        "eventhubsRatingsName": {
            "defaultValue": "[concat(parameters('deployNs'), 'ehRatings', uniqueString(resourceGroup().id))]",
            "type": "string",
            "metadata": {
                "description": "Event Hub containing ratings data"
            }
        },
        "eventhubUsersName": {
            "defaultValue": "[concat(parameters('deployNs'), 'ehUsers', uniqueString(resourceGroup().id))]",
            "type": "string",
            "metadata": {
                "description": "Event Hub containing users data"
            }
        },
        "storAccountName": {
            "defaultValue": "[concat(parameters('deployNs'), 'stor', uniqueString(resourceGroup().id))]",
            "type": "string",
            "metadata": {
                "description": "Storage account name"
            }
        },
        "storLocation": {
            "defaultValue": "[resourceGroup().location]",
            "type": "string",
            "metadata": {
                "description": "Storage account location"
            }
        },
        "ratingsContainerName": {
            "defaultValue": "[concat(parameters('deployNs'), 'ciratings', uniqueString(resourceGroup().id))]",
            "type": "string",
            "metadata": {
                "description": "Storage account location"
            }
        },
        "ratingsContainerImage": {
            "defaultValue": "devlace/eventhubgeneratorratings:latest",
            "type": "string",
            "metadata": {
                "description": "Docker Image location of the EventHub Data Generator (Ratings)"
            }
        },
        "ratingsContainerCpu": {
            "defaultValue": 1,
            "type": "int",
            "metadata": {
                "description": "Container instance running EventHub Data Generator (Ratings) # of cpus"
            }
        },
        "ratingsContainerMemoryGb": {
            "defaultValue": 2,
            "type": "int",
            "metadata": {
                "description": "Container instance running EventHub Data Generator (Ratings) RAM in Gb"
            }
        },
        "ratingFilePath": {
            "defaultValue": "rawdata/ml-latest/ratings.csv",
            "type": "string"
        }
    },
    "variables": {
        "managedResourceGroupId": "[concat(subscription().id, '/resourceGroups/', variables('managedResourceGroupName'))]",
        "managedResourceGroupName": "[concat('databricks-rg-', parameters('dbricksWorkspaceName'), '-', uniqueString(parameters('dbricksWorkspaceName'), resourceGroup().id))]",
        "eventhubsFullRatingsName": "[concat(parameters('eventhubsNsName'), '/', parameters('eventhubsRatingsName'))]",
        "eventhubsFullUsersName": "[concat(parameters('eventhubsNsName'), '/', parameters('eventhubUsersName'))]"
    },
    "resources": [
        {
            "apiVersion": "2018-04-01",
            "location": "[parameters('dbricksLocation')]",
            "name": "[parameters('dbricksWorkspaceName')]",
            "tags": {
                "displayName": "Databricks Workspace"
            },
            "sku": {
                "name": "[parameters('dbricksTier')]"
            },
            "properties": {
                "ManagedResourceGroupId": "[variables('managedResourceGroupId')]"
            },
            "type": "Microsoft.Databricks/workspaces"
        },
        {
            "type": "Microsoft.EventHub/namespaces",
            "sku": {
                "name": "Standard",
                "tier": "Standard",
                "capacity": 1
            },
            "name": "[parameters('eventhubsNsName')]",
            "apiVersion": "2017-04-01",
            "location": "[parameters('eventhubsLocation')]",
            "tags": {},
            "scale": null,
            "properties": {
                "isAutoInflateEnabled": true,
                "maximumThroughputUnits": 20
            },
            "dependsOn": []
        },
        {
            "type": "Microsoft.EventHub/namespaces/eventhubs",
            "name": "[variables('eventhubsFullRatingsName')]",
            "apiVersion": "2017-04-01",
            "location": "[parameters('eventhubsLocation')]",
            "scale": null,
            "properties": {
                "messageRetentionInDays": 1,
                "partitionCount": 2,
                "status": "Active"
            },
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', parameters('eventhubsNsName'))]"
            ]
        },
        {
            "type": "Microsoft.EventHub/namespaces/eventhubs",
            "name": "[variables('eventhubsFullUsersName')]",
            "apiVersion": "2017-04-01",
            "location": "[parameters('eventhubsLocation')]",
            "scale": null,
            "properties": {
                "messageRetentionInDays": 1,
                "partitionCount": 2,
                "status": "Active"
            },
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', parameters('eventhubsNsName'))]"
            ]
        },
        {
            "type": "Microsoft.EventHub/namespaces/eventhubs/authorizationRules",
            "name": "[concat(variables('eventhubsFullRatingsName'), '/manage')]",
            "apiVersion": "2017-04-01",
            "location": "[parameters('eventhubsLocation')]",
            "scale": null,
            "properties": {
                "rights": [
                    "Manage",
                    "Listen",
                    "Send"
                ]
            },
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', parameters('eventhubsNsName'))]",
                "[resourceId('Microsoft.EventHub/namespaces/eventhubs', parameters('eventhubsNsName'), parameters('eventhubsRatingsName'))]"
            ]
        },
        {
            "type": "Microsoft.EventHub/namespaces/eventhubs/authorizationRules",
            "name": "[concat(variables('eventhubsFullUsersName'), '/manage')]",
            "apiVersion": "2017-04-01",
            "location": "[parameters('eventhubsLocation')]",
            "scale": null,
            "properties": {
                "rights": [
                    "Manage",
                    "Listen",
                    "Send"
                ]
            },
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', parameters('eventhubsNsName'))]",
                "[resourceId('Microsoft.EventHub/namespaces/eventhubs', parameters('eventhubsNsName'), parameters('eventhubUsersName'))]"
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "name": "[parameters('storAccountName')]",
            "apiVersion": "2017-10-01",
            "location": "[parameters('storLocation')]",
            "tags": {
                "displayname": "Databricks storage"
            },
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "name": "[parameters('ratingsContainerName')]",
            "type": "Microsoft.ContainerInstance/containerGroups",
            "condition": false,
            "apiVersion": "2017-08-01-preview",
            "location": "[resourceGroup().location]",
            "properties": {
                "containers": [
                    {
                        "name": "[parameters('ratingsContainerName')]",
                        "properties": {
                            "image": "[parameters('ratingsContainerImage')]",
                            "resources": {
                                "requests": {
                                    "cpu": "[parameters('ratingsContainerCpu')]",
                                    "memoryInGb": "[parameters('ratingsContainerMemoryGb')]"
                                }
                            },
                            "environmentVariables": [
                                {
                                    "name": "EVENTHUB_CONNECTION_STRING",
                                    "value": "[listkeys(resourceId('Microsoft.EventHub/namespaces/eventhubs/authorizationRules', parameters('eventhubsNsName'), parameters('eventhubsRatingsName'), 'manage'), '2017-04-01').primaryConnectionString]"
                                },
                                {
                                    "name": "STORAGE_CONTAINER_STRING",
                                    "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storAccountName')), '2017-10-01').keys[0].value)]"
                                },
                                {
                                    "name": "STORAGE_CONTAINER",
                                    "value": "databricks"
                                },
                                {
                                    "name": "RATINGS_FILEPATH",
                                    "value": "[parameters('ratingFilePath')]"
                                }
                            ]
                        }
                    }
                ],
                "osType": "Linux",
                "restartPolicy": "Always"
            },
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', parameters('eventhubsNsName'))]",
                "[resourceId('Microsoft.EventHub/namespaces/eventhubs', parameters('eventhubsNsName'), parameters('eventhubsRatingsName'))]",
                "[resourceId('Microsoft.EventHub/namespaces/eventhubs/authorizationRules', parameters('eventhubsNsName'), parameters('eventhubsRatingsName'), 'manage')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storAccountName'))]"
            ]
        }
    ],
    "outputs": {
        "dbricksWorkspaceName": {
            "value": "[parameters('dbricksWorkspaceName')]",
            "type": "string"
        },
        "dbricksLocation": {
            "value": "[parameters('dbricksLocation')]",
            "type": "string"
        },
        "storAccountName": {
            "value": "[parameters('storAccountName')]",
            "type": "string"
        },
        "eventhubsNsName": {
            "value": "[parameters('eventhubsNsName')]",
            "type": "string"
        },
        "eventhubsRatingsName": {
            "value": "[parameters('eventhubsRatingsName')]",
            "type": "string"
        },
        "eventhubUsersName": {
            "value": "[parameters('eventhubUsersName')]",
            "type": "string"
        }
    }
}